{"version":3,"sources":["components/Footer.js","components/QRGenerator.js","components/QRScanner.js","components/HomeRoute.js","components/Navbar.js","App.js","index.js"],"names":["styled","div","Link","a","Footer","QRGenerator","useState","qrURL","setQrURL","inputRef","useRef","opts","errorCorrectionLevel","type","margin","generateQRCode","e","preventDefault","QRCode","toDataURL","current","value","err","url","onSubmit","ref","style","onClick","src","width","alt","QRScanner","result","setResult","delay","height","onError","console","error","onScan","data","log","MainWrapper","HomeRouteRoute","NavBar","NavbarLogo","Navbar","Provider","color","to","GlobalWrapper","App","path","exact","component","Home","ReactDOM","render","document","getElementById"],"mappings":"07CAKwBA,IAAOC,IAAV,KAMLD,IAAOC,IAAV,KASKD,IAAOC,IAAV,KAOGD,IAAOC,IAAV,KAMKD,IAAOC,IAAV,KAIHD,IAAOC,IAAV,KAQUD,YAAOE,IAAPF,CAAH,KAKGA,IAAOG,EAAV,KAIAH,IAAOC,IAAV,KAkDAG,I,yBC/DAC,MAtCf,WAAwB,IAAD,EAEKC,mBAAS,IAFd,mBAEdC,EAFc,KAEPC,EAFO,KAGfC,EAAWC,mBAEbC,EAAO,CACTC,qBAAsB,IACtBC,KAAM,aACNC,OAAQ,GAGJC,EAAiB,SAACC,GACtBA,EAAEC,iBACFC,IAAOC,UAAUV,EAASW,QAAQC,MAAOV,GAAM,SAAUW,EAAKC,GAC5D,GAAID,EAAK,MAAMA,EACfd,EAASe,OAIb,OACE,gCACE,mDACA,uBAAMC,SAAUT,EAAhB,UACE,uBAAOF,KAAK,OAAOY,IAAKhB,EAAUiB,MAAO,CAACZ,OAAQ,gBAClD,wBAAQa,QAASZ,EAAjB,yBAEF,uBACCR,GACC,qCACA,qBAAKqB,IAAKrB,EAAOmB,MAAO,CAACG,MAAO,SAAUC,IAAI,YAC9C,4BAAIrB,EAASW,QAAQC,e,iBC9Bd,SAASU,IAAa,IAAD,EACNzB,mBAAS,aADH,mBAC3B0B,EAD2B,KACnBC,EADmB,OAElB3B,mBAAS,IAAlB4B,EAF2B,oBAoBlC,OACE,gCACE,cAAC,IAAD,CACEA,MAAOA,EACPR,MATe,CACnBS,OAAQ,QACRN,MAAO,SAQHO,QAdc,SAACd,GACnBe,QAAQC,MAAMhB,IAcViB,OAtBa,SAACC,GACdA,IACFH,QAAQI,IAAID,GACZP,EAAUO,OAqBV,4BAAIR,O,uEC1BV,IAAMU,EAAc1C,IAAOC,IAAV,KAaF0C,MATf,WACE,OACE,eAACD,EAAD,WACE,cAACX,EAAD,IACA,cAAC,EAAD,Q,2aCRN,IAAMa,EAAS5C,IAAOC,IAAV,KAiBN4C,EAAa7C,YAAOE,IAAPF,CAAH,KAiBD8C,MAZf,WACE,OACE,cAAC,IAAYC,SAAb,CAAsB1B,MAAO,CAAE2B,MAAO,SAAtC,SACE,cAACJ,EAAD,UACE,cAACC,EAAD,CAAYI,GAAG,wBAAf,SACE,8D,iPCzBV,IAAMC,EAAgBlD,IAAOC,IAAV,KAMbyC,EAAc1C,IAAOC,IAAV,KAoBFkD,MAff,WACE,OACE,cAAC,IAAD,UACE,eAACD,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOE,KAAK,wBAAwBC,OAAK,EAACC,UAAWC,cCnBjEC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.abc0e28d.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FaArrowAltCircleUp } from 'react-icons/fa';\n\nconst FooterContainer = styled.div`\n  color: white;\n  background-color: black;\n  text-decoration: none;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  margin: 4rem 0 4rem 8rem;\n  @media screen and (max-width: 960px) {\n    flex-direction: column;\n    margin: 1rem 0 1rem 2rem;\n  }\n`;\n\nconst InfoPanel = styled.div`\n  display: flex;\n  width: 30%;\n  flex-direction: column;\n  text-align: left;\n`;\n\nconst RightSide = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n`;\n\nconst ExporePanel = styled.div`\n  width: 80%;\n`;\n\nconst Links = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n\n  text-decoration: none;\n`;\n\nconst RedirectLink = styled(Link)`\n  text-decoration: none;\n  color: white;\n`;\n\nconst NewTabButton = styled.a`\n  cursor: pointer;\n`;\n\nconst BackToTop = styled.div`\n  \n  margin-right: 5rem;\n  width: 100%;\n  text-align: right;\n  svg{\n    font-size: 2rem;\n  }\n`;\n\nfunction Footer() {\n  const openLink = (url) => {\n    const win = window.open(url, '_blank');\n    if (win) {\n      win.focus();\n    }\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <FooterContainer>\n      <Content>\n        <InfoPanel>\n          <h1>Website Title</h1>\n        </InfoPanel>\n        <RightSide>\n          <ExporePanel>\n            <h3>Links</h3>\n            <br />\n            <Links>\n              <RedirectLink to='/'>Home</RedirectLink>\n              <RedirectLink to='/link1'>Link1</RedirectLink>\n              <RedirectLink to='/link2'>Link2</RedirectLink>\n              <RedirectLink to='/link3'>Link3</RedirectLink>\n            </Links>\n          </ExporePanel>\n          {/* <BackToTop>\n            <NewTabButton onClick={scrollToTop}>\n              <FaArrowAltCircleUp />\n            </NewTabButton>\n          </BackToTop> */}\n        </RightSide>\n      </Content>\n    </FooterContainer>\n  );\n}\n\nexport default Footer;\n","import React, {useRef, useState} from 'react'\nimport QRCode from 'qrcode'\n\nfunction QRGenerator() {\n\n  const [qrURL, setQrURL] = useState('');\n  const inputRef = useRef();\n\n  var opts = {\n    errorCorrectionLevel: 'H',\n    type: 'image/jpeg',\n    margin: 1,\n  }\n\n  const generateQRCode = (e) => {\n    e.preventDefault();\n    QRCode.toDataURL(inputRef.current.value, opts, function (err, url) {\n      if (err) throw err\n      setQrURL(url);\n    })\n  }\n\n  return (\n    <div>\n      <h1>QR Code Generator</h1>\n      <form onSubmit={generateQRCode}>\n        <input type=\"text\" ref={inputRef} style={{margin: '0 1rem 0 0'}}/>\n        <button onClick={generateQRCode}>Generate</button>\n      </form>\n      <br />\n      {qrURL && (\n        <>\n        <img src={qrURL} style={{width: '200px'}} alt=\"qr code\"/>\n        <p>{inputRef.current.value}</p>\n        </>\n      )}\n\n    </div>\n  )\n}\n\nexport default QRGenerator\n","import React, { useState } from 'react';\nimport QrReader from 'react-qr-reader' \n\nexport default function QRScanner() {\n  const [result, setResult] = useState('No result');\n  const [delay] = useState(50);\n\n  const handleScan = (data) => {\n    if (data) {\n      console.log(data)\n      setResult(data);\n    }\n  };\n\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  const previewStyle = {\n    height: '300px',\n    width: '300px',\n  }\n\n  return(\n    <div>\n      <QrReader\n        delay={delay}\n        style={previewStyle}\n        onError={handleError}\n        onScan={handleScan}\n        />\n      <p>{result}</p>\n    </div>\n  )\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport QRGenerator from \"./QRGenerator\";\nimport QRScanner from \"./QRScanner\";\n\nconst MainWrapper = styled.div`\n`;\n \n\nfunction HomeRouteRoute() {\n  return (\n    <MainWrapper>\n      <QRScanner />\n      <QRGenerator />\n    </MainWrapper>\n  );\n}\n\nexport default HomeRouteRoute;\n","import React from 'react';\nimport { IconContext } from 'react-icons/lib';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst NavBar = styled.div`\n  height: 80px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 999;\n\n  margin: 0;\n  padding: 0 50px;\n\n  @media screen and (max-width: 960px) {\n    position: sticky;\n    top: 0;\n  }\n`;\n\nconst NavbarLogo = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n\nfunction Navbar() {\n  return (\n    <IconContext.Provider value={{ color: 'black' }}>\n      <NavBar>\n        <NavbarLogo to='/react-qr-code-reader'>\n          <h2>QR Scan and Generator</h2>\n        </NavbarLogo>\n      </NavBar>\n    </IconContext.Provider>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Footer from './components/Footer';\nimport Home from './components/HomeRoute';\nimport Navbar from './components/Navbar.js';\nimport styled from 'styled-components';\n\nconst GlobalWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\nconst MainWrapper = styled.div`\n  flex: 1;\n  padding: 0 50px;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <GlobalWrapper>\n        <Navbar />\n        <MainWrapper>\n          <Switch>\n            <Route path='/react-qr-code-reader' exact component={Home} />\n          </Switch>\n        </MainWrapper>\n      </GlobalWrapper>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}